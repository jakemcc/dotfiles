#!/bin/sh

if git rev-parse --verify HEAD >/dev/null 2>&1
then
    against=HEAD
else
    # Initial commit: diff against an empty tree object
    against=4b825dc642cb6eb9a060e54bf8d69288fbee4904
fi

patch_filename=$(mktemp -t commit_hook_changes)
git diff --exit-code --binary --ignore-submodules --no-color > $patch_filename
has_unstaged_changes=$?

if [[ $has_unstaged_changes != 0 ]]; then
    echo "Stashing unstaged changes in $patch_filename."
    git checkout -- .
fi

function quit {
    if [[ $has_unstaged_changes != 0 ]]; then
        git apply $patch_filename
        if [[ $? != 0 ]]; then
            git checkout -- .
            git apply $patch_filename
        fi
    fi

    exit $1
}
# Redirect output to stderr.


exec 1>&2
files_with_nocommit=$(git diff --cached --name-only --diff-filter=ACM $against | xargs grep -i "nocommit" -l | tr '\n' ' ')

if [[ "x${files_with_nocommit}x" != "xx" ]]; then
    tput setaf 1
    echo "${red}File being committed with 'nocommit' in it:"
    echo $files_with_nocommit | tr ' ' '\n'
    tput setaf sgr0
    quit 1
fi

quit 0
